apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.missli.androidut"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    sourceSets {
        androidTest {
            java.srcDirs file('src/androidTest/java')
        }
        test{
            java.srcDirs file('src/test/java')
        }
        main{
            java.srcDirs file('src/main/java')
        }
    }
    jacoco {
        version "0.7.4.201502262128"
    }
    //jacocoTestReport,需要打开真机
    task jacocoTestReport(type: JacocoReport, dependsOn: ['test','connectedAndroidTest']) {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        reports {
            xml.enabled = false
            html.enabled = true
            csv.enabled = false
        }
        classDirectories = fileTree(
                dir: "$buildDir/intermediates/classes/debug",
                excludes: [
                        '**/*Test.class',
                        '**/R.class',
                        '**/R$*.class',
                        '**/BuildConfig.*',
                        '**/Manifest*.*'
                ]
        )
        def coverageSourceDirs = ['src/main/java']
        additionalSourceDirs = files(coverageSourceDirs)
        sourceDirectories = files(coverageSourceDirs)
        additionalClassDirs = files(coverageSourceDirs)
        executionData = fileTree(dir: "$buildDir", includes: [
                "jacoco/testDebugUnitTest.exec", "outputs/code-coverage/connected/*coverage.ec"
    ])}

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
}
